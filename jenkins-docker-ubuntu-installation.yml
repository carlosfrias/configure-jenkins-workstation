---
- name: Configure an API workstations
  hosts: localhost
  connection: local
  gather_facts: no
  become: yes
  vars_prompt:
    - name: 'reboot'
      prompt: "You will need a reboot, do you want to reboot at the end of this script? (y/n)"
  tasks:
  - name: Install modules
    pip:
      name: "{{ item }}"
      state: present
    with_items:
    - docker-py

  - name: Install packages with apt
    apt:
      name: "{{ item }}"
      state: latest
      update_cache: yes
    with_items:
    - docker-engine

  - name: Stop docker service
    service:
      name: docker
      state: stopped

  - name: Down ifconfig on docker0
    ignore_errors: yes
    shell: ifconfig docker0 down

  - name: Delete docker0 ip link
    ignore_errors: yes
    shell: ip link del docker0

  - name: Avoid conflicts between the Docker bridge and Corp IPs.
    lineinfile:
      dest: /etc/default/docker
      line: 'DOCKER_OPTS="${DOCKER_OPTS} --bip=192.168.9.1/24"'
      regexp: '^DOCKER_OPTS=.*'
      state: present

  - name: Avoid conflicts between the Docker bridge and Corp IPs.
    lineinfile:
      dest: /etc/default/docker
      line: 'DOCKER_OPTS="${DOCKER_OPTS} --graph=/usr/local/google/docker"'
      insertafter: '^DOCKER_OPTS="${DOCKER_OPTS} --bip=192.168.9.1/24"'
      state: present

  - name: Add current user to docker group
    user:
      name: "{{ ansible_user_id }}"
      shell: /bin/bash
      groups: docker
      append: yes

  - name: Start docker service
    service:
      name: docker
      state: started

  - name: Reboot node
    shell: reboot now
    async: 0
    poll: 0
    when: reboot == 'y'


